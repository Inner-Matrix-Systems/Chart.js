{"version":3,"file":"chart.js","sources":["../src/core/core.animator.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/controllers/controller.bar.js","../src/controllers/controller.bubble.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.line.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/core/core.adapters.ts","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/elements/element.arc.js","../src/elements/element.line.js","../src/elements/element.point.js","../src/elements/element.bar.js","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/index.ts"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  /**\n\t * @private\n\t */\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  /**\n\t * @private\n\t */\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  /**\n\t * @private\n\t */\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  /**\n\t * @private\n\t */\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController';\nimport {valueOrDefault} from '../helpers/helpers.core';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController';\nimport {_parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ChartOptions} from '../../types';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../../types/basic';\nimport type {Point} from '../../types/geometric';\nimport type {Animation} from '../../types/animation';\nimport {isNumber} from '../helpers/helpers.math';\n\nexport default class Element<T extends AnyObject = AnyObject, O extends AnyObject = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Pick<T, P[number]>;\n    }\n    const ret: Partial<Pick<T, P[number]>> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret as Pick<T, P[number]>;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {object} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {object} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, startAngle: number, endAngle: number, innerRadius: number, outerRadius: number, circumference: number }} ArcProps */\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n * @param {ArcElement} arc\n * @param {number} innerRadius\n * @param {number} outerRadius\n * @param {number} angleDelta Arc circumference in radians\n * @returns\n */\nfunction parseBorderRadius(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n * @param {number} r Radius from center point\n * @param {number} theta Angle in radians\n * @param {number} x Center X coordinate\n * @param {number} y Center Y coordinate\n * @returns {{ x: number; y: number }} Rectangular coordinate point\n */\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting the border radius\n *\n * 8 points of interest exist around the arc segment.\n * These points define the intersection of the arc edges and the corners.\n *\n *   Start      End\n *\n *    1---------2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6---------5    Inner\n * @param {CanvasRenderingContext2D} ctx\n * @param {ArcElement} element\n */\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segment from point 1 to point 2\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point 6\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n\n  let i;\n\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\n\nexport default class ArcElement extends Element {\n\n  static id = 'arc';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  /**\n\t * @param {number} chartX\n\t * @param {number} chartY\n\t * @param {boolean} [useFinalPosition]\n\t */\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = /** @type {ArcProps} */ (this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition));\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  /**\n\t * @param {boolean} [useFinalPosition]\n\t */\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = /** @type {ArcProps} */ (this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition));\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  /**\n\t * @param {boolean} [useFinalPosition]\n\t */\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\n\nfunction inRange(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport default class PointElement extends Element {\n\n  static id = 'point';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = /** @type {{ x: number, y: number }} */ (this.getProps(['x', 'y'], useFinalPosition));\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx, area) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {isArray} from '../../helpers';\nimport {_pointsFromSegments} from './filler.segment';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core';\n\n/**\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.line').default } LineElement\n * @typedef { import('../../../types').FillTarget } FillTarget\n * @typedef { import('../../../types').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {_isBetween} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\nimport {_getTargetPixel, _getTargetValue} from './filler.options';\nimport {_buildStackLine} from './filler.target.stack';\nimport {simpleArc} from './simpleArc';\n\n/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment';\nimport {_getTarget} from './filler.target';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line';\nimport {_drawfill} from './filler.drawing';\nimport {_shouldApplyFill} from './filler.helper';\nimport {_decodeFill, _resolveTarget} from './filler.options';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults';\nimport Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas';\nimport {\n  callback as call, valueOrDefault, toFont,\n  toPadding, getRtlAdapter, overrideTextDirection, restoreTextDirection,\n  clipArea, unclipArea, _isBetween\n} from '../helpers/index';\nimport {_toLeftRightCenter, _alignStartEnd, _textX} from '../helpers/helpers.extras';\nimport {toTRBLCorners} from '../helpers/helpers.options';\n/**\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n * @typedef { import(\"../core/core.interaction\").InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import(\"../core/core.adapters\").DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @return {object}\n\t * @protected\n\t */\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time';\nimport {_lookupByKey} from '../helpers/helpers.collection';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers';\nexport * from './core';\nexport * from './elements';\nexport * from './platform';\nexport * from './plugins';\nexport * from './scales';\n\nimport * as controllers from './controllers';\nimport * as elements from './elements';\nimport * as plugins from './plugins';\nimport * as scales from './scales';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"],"names":["Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","animator","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isFinite","sign","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","datasetElementType","dataElementType","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","inflateAmount","BarController","grouped","numbers","overrides","_index_","offset","grid","_value_","beginAtZero","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","animateRotate","animateScale","spacing","descriptors","_scriptable","_indexable","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","borderWidth","onClick","e","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","fill","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getProps","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","defaultRoutes","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","getValueForPixel","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","backdrop","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderText","unclipArea","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","merge","routeDefaults","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","version","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","enumerable","d","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","fontColor","textWidth","setWidth","realX","_textX","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","_element","afterEvent","ci","useBorderRadius","startsWith","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"mappings":"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"}