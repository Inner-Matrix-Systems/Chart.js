{"version":3,"file":"chart.umd.js","sources":["../src/helpers/helpers.core.ts","../src/helpers/helpers.math.js","../src/helpers/helpers.collection.js","../src/helpers/helpers.extras.js","../src/core/core.animator.js","../node_modules/@kurkle/color/dist/color.esm.js","../src/helpers/helpers.color.js","../src/core/core.animations.defaults.js","../src/helpers/helpers.intl.js","../src/core/core.ticks.js","../src/core/core.defaults.js","../src/core/core.layouts.defaults.js","../src/core/core.scale.defaults.js","../src/helpers/helpers.dom.js","../src/helpers/helpers.canvas.js","../src/helpers/helpers.config.js","../src/helpers/helpers.curve.js","../src/helpers/helpers.easing.ts","../src/helpers/helpers.interpolation.js","../src/helpers/helpers.options.js","../src/helpers/helpers.rtl.js","../src/helpers/helpers.segment.js","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/core/core.adapters.ts","../src/controllers/controller.bar.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.bubble.js","../src/controllers/controller.line.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/elements/element.arc.js","../src/elements/element.line.js","../src/elements/element.point.js","../src/elements/element.bar.js","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/index.umd.ts"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport {AnyObject} from '../../types/basic';\nimport {ActiveDataPoint, ChartEvent} from '../../types';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown) => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import {isFinite as isFiniteNumber} from './helpers.core';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n * @return {number}\n */\nexport function niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nexport function almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\n\nexport function almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param {number} x - A number.\n * @returns {number} The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @private\n */\nexport function _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param {number} value\n * @param {number} start\n * @param {number} end\n * @param {number} [epsilon]\n * @private\n */\nexport function _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core';\n\n/**\n * Binary search\n * @param {array} table - the table search. must be sorted!\n * @param {number} value - value to find\n * @param {function} [cmp]\n * @private\n */\nexport function _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param {array} table - the table search. must be sorted!\n * @param {string} key - property name for the value in each entry\n * @param {number} value - value to find\n * @param {boolean} [last] - lookup last index\n * @private\n */\nexport const _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param {array} table - the table search. must be sorted!\n * @param {string} key - property name for the value in each entry\n * @param {number} value - value to find\n * @private\n */\nexport const _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param {number[]} values - sorted array of values\n * @param {number} min - min value\n * @param {number} max - max value\n */\nexport function _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param {Array} items\n */\nexport function _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import {_limitValue} from './helpers.math';\nimport {_lookupByKey} from './helpers.collection';\n\nexport function fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n * @param {function} fn\n * @param {*} thisArg\n * @param {function} [updateFn]\n */\nexport function throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n\n  return function(...rest) {\n    args = updateArgs(rest);\n\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n * @param {function} fn - Function to call.\n * @param {number} delay - Delay in ms. 0 = immediate invocation.\n * @returns {function}\n */\nexport function debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @param {string} align start, end, center\n * @private\n */\nexport const _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @param {string} align start, end, center\n * @param {number} start value for start\n * @param {number} end value for end\n * @private\n */\nexport const _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @param {string} align start, end, center\n * @param {number} left value for start\n * @param {number} right value for end\n * @param {boolean} rtl Is this an RTL draw\n * @private\n */\nexport const _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @param {object} meta - dataset meta.\n * @param {array} points - array of point elements.\n * @param {boolean} animationsDisabled - if true animation is disabled.\n * @returns {{start: number; count: number}}\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import colorLib from '@kurkle/color';\n\nexport function isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : colorLib(value);\n}\n\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : colorLib(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map();\n\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {log10} from '../helpers/helpers.math';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core';\nimport {applyAnimationsDefaults} from './core.animations.defaults';\nimport {applyLayoutsDefaults} from './core.layouts.defaults';\nimport {applyScaleDefaults} from './core.scale.defaults';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {INFINITY} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element) => element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\n\n/**\n * @param {Event} e\n * @param {HTMLCanvasElement} canvas\n * @returns {{x: number, y: number, box: boolean}}\n */\nfunction getCanvasPosition(e, canvas) {\n  // @ts-ignore\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param {Event|ChartEvent} evt\n * @param {dom.Chart} chart\n * @returns {{x: number, y: number}}\n */\nexport function getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = v => Math.round(v * 10) / 10;\n\nexport function getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  if (aspectRatio && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {\n    width,\n    height\n  };\n}\n\n/**\n * @param {import('../core/core.controller').default} chart\n * @param {number} [forceRatio]\n * @param {boolean} [forceStyle]\n * @returns {boolean} True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    };\n    // @ts-ignore\n    window.addEventListener('test', null, options);\n    // @ts-ignore\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {number=} Size in pixels or undefined if unknown.\n */\nexport function readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import {isArray, isNullOrUndef} from './helpers.core';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } canvas.Chart\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target;\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math';\nimport {_isPointInArea} from './helpers.canvas';\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n *\n * @param {{\n * x: number,\n * y: number,\n * skip?: boolean,\n * cp1x?: number,\n * cp1y?: number,\n * cp2x?: number,\n * cp2y?: number,\n * }[]} points\n * @param {string} indexAxis\n */\nexport function splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {PI, TAU, HALF_PI} from './helpers.math';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","/**\n * @private\n */\nexport function _pointInLine(p1, p2, t, mode) { // eslint-disable-line no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1, p2, t, mode) { // eslint-disable-line no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","import defaults from '../core/core.defaults';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core';\nimport {toFontString} from './helpers.canvas';\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  default:\n    break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = v => +v || 0;\n\n/**\n * @param {any} value\n * @param {string[] | Record<string, string>} props\n */\nexport function _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param {number|object} value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns {object} The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param {number|object} value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns {object} The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param {number|object} value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns {object} The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value) {\n  const obj = toTRBL(value);\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n\n/**\n * Parses font options and returns the font object.\n * @param {object} options - A object that contains font options to be parsed.\n * @param {object} [fallback] - A object that contains fallback font options.\n * @return {object} The font object.\n * @private\n */\nexport function toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param {Array} inputs - An array of values, falling back to the last value.\n * @param {object} [context] - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param {number} [index] - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param {object} [info] - object to return information about resolution in\n * @param {boolean} [info.cacheable] - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param {{min: number, max: number}} minmax\n * @param {number|string} grace\n * @param {boolean} beginAtZero\n * @private\n */\nexport function _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param {object|null} parentContext\n * @param {object} context\n * @returns {object}\n */\nexport function createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","const getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math';\nimport {createContext} from './helpers.options';\n\n/**\n * @typedef { import(\"../elements/element.line\").default } LineElement\n * @typedef { import(\"../elements/element.point\").default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  /**\n\t * @private\n\t */\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  /**\n\t * @private\n\t */\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  /**\n\t * @private\n\t */\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  /**\n\t * @private\n\t */\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import {AnyObject} from '../../types/basic';\nimport {Point} from '../../types/geometric';\nimport {Animation} from '../../types/animation';\nimport {isNumber} from '../helpers/helpers.math';\n\nexport default class Element<T extends AnyObject = AnyObject, O extends AnyObject = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Pick<T, P[number]>;\n    }\n    const ret: Partial<Pick<T, P[number]>> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret as Pick<T, P[number]>;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {object} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {object} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport {AnyObject} from '../../types/basic';\nimport {ChartOptions} from '../../types';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {valueOrDefault} from '../helpers/helpers.core';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController';\nimport {_parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, startAngle: number, endAngle: number, innerRadius: number, outerRadius: number, circumference: number }} ArcProps */\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n * @param {ArcElement} arc\n * @param {number} innerRadius\n * @param {number} outerRadius\n * @param {number} angleDelta Arc circumference in radians\n * @returns\n */\nfunction parseBorderRadius(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n * @param {number} r Radius from center point\n * @param {number} theta Angle in radians\n * @param {number} x Center X coordinate\n * @param {number} y Center Y coordinate\n * @returns {{ x: number; y: number }} Rectangular coordinate point\n */\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting the border radius\n *\n * 8 points of interest exist around the arc segment.\n * These points define the intersection of the arc edges and the corners.\n *\n *   Start      End\n *\n *    1---------2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6---------5    Inner\n * @param {CanvasRenderingContext2D} ctx\n * @param {ArcElement} element\n */\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segment from point 1 to point 2\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point 6\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n\n  let i;\n\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\n\nexport default class ArcElement extends Element {\n\n  static id = 'arc';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  /**\n\t * @param {number} chartX\n\t * @param {number} chartY\n\t * @param {boolean} [useFinalPosition]\n\t */\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = /** @type {ArcProps} */ (this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition));\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  /**\n\t * @param {boolean} [useFinalPosition]\n\t */\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = /** @type {ArcProps} */ (this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition));\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  /**\n\t * @param {boolean} [useFinalPosition]\n\t */\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\n\nfunction inRange(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport default class PointElement extends Element {\n\n  static id = 'point';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = /** @type {{ x: number, y: number }} */ (this.getProps(['x', 'y'], useFinalPosition));\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx, area) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {isArray} from '../../helpers';\nimport {_pointsFromSegments} from './filler.segment';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core';\n\n/**\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.line').default } LineElement\n * @typedef { import('../../../types').FillTarget } FillTarget\n * @typedef { import('../../../types').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {_isBetween} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\nimport {_getTargetPixel, _getTargetValue} from './filler.options';\nimport {_buildStackLine} from './filler.target.stack';\nimport {simpleArc} from './simpleArc';\n\n/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment';\nimport {_getTarget} from './filler.target';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line';\nimport {_drawfill} from './filler.drawing';\nimport {_shouldApplyFill} from './filler.helper';\nimport {_decodeFill, _resolveTarget} from './filler.options';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults';\nimport Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas';\nimport {\n  callback as call, valueOrDefault, toFont,\n  toPadding, getRtlAdapter, overrideTextDirection, restoreTextDirection,\n  clipArea, unclipArea, _isBetween\n} from '../helpers/index';\nimport {_toLeftRightCenter, _alignStartEnd, _textX} from '../helpers/helpers.extras';\nimport {toTRBLCorners} from '../helpers/helpers.options';\n/**\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n * @typedef { import(\"../core/core.interaction\").InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import(\"../core/core.adapters\").DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @return {object}\n\t * @protected\n\t */\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time';\nimport {_lookupByKey} from '../helpers/helpers.collection';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n\n/**\n * @namespace Chart\n */\nimport Chart from './core/core.controller';\n\nimport * as helpers from './helpers';\nimport _adapters from './core/core.adapters';\nimport Animation from './core/core.animation';\nimport animator from './core/core.animator';\nimport Animations from './core/core.animations';\nimport * as controllers from './controllers';\nimport DatasetController from './core/core.datasetController';\nimport Element from './core/core.element';\nimport * as elements from './elements/index';\nimport Interaction from './core/core.interaction';\nimport layouts from './core/core.layouts';\nimport * as platforms from './platform/index';\nimport * as plugins from './plugins';\nimport registry from './core/core.registry';\nimport Scale from './core/core.scale';\nimport * as scales from './scales';\nimport Ticks from './core/core.ticks';\n\n// Register built-ins\nChart.register(controllers, scales, elements, plugins);\n\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\n\n// Compatibility with ESM extensions\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nexport default Chart;\n\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","resolveObjectKey","obj","resolver","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","this","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","updateFn","updateArgs","ticking","rest","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","get","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","delete","animator","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","m","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","ret","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","colorLib","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","height","getRelativePosition","evt","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","rect","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","strokeStyle","strokeText","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","resolve","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","effects$1","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pixelSize","fontStyle","fontFamily","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","chartArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","dataset","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","update","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","freeze","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","interpolators","boolean","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","rej","resolved","Animations","_properties","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","tickOpts","ticksLimit","maxTicksLimit","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","fillRect","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","Chart$1","abstract","DateAdapterBase","members","formats","startOf","endOf","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","legend","generateLabels","legendItem","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","lastPoint","updateControlPoints","angleLines","circular","pointLabels","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","pointPosition","getPointPositionForValue","clipArc","pixelMargin","angleMargin","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","inner","lineJoin","fullCircles","drawFullCircleBorders","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","hoverRadius","mouseX","mouseY","inXRange","inYRange","addRectPath","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","fontColor","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale$1","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","_addedLabels","added","helpers","platforms"],"mappings":"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"}